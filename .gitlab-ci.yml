stages:
  - build
  - test
  - package
  - deploy

# cache maven repo & nodejs modules
cache:
  paths:
    - apt-cache/
    - .m2/repository
    - node_modules/
    - target/

variables:
  JAVA_HOME: /usr/local/openjdk-11
  M2_HOME: ".m2/repository"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: integration-test
  GROUP_GITLAB: mohamed.karami
  APP_NAME: mobidata-mashup
  REPO: mobidatalab
#  CI_REGISTRY: gitlab.akka.eu:4567

# not need on elksiba runner
#before_script:
#  - export http_proxy=$HTTP_PROXY; export https_proxy=$HTTPS_PROXY; export no_proxy=$NO_PROXY;

build-job:
  stage: build
  image: maven:3.8.5-openjdk-11-slim
  tags:
    - elksiba
  script:
#    - echo "Installing osgeo repository certificates, needed for selfsigned certificate"
#    - which java
#    - java -version
#    - echo -n | openssl s_client -connect repo.osgeo.org:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /tmp/certOsgeo.cer
#    - keytool -import -trustcacerts -keystore /usr/local/openjdk-11/lib/security/cacerts -storepass changeit -noprompt -alias certOsgeo -file /tmp/certOsgeo.cer
    - echo "Compiling the code..."
    - mvn install -B -DskipTests
    - echo "Compile complete!"
## cannot be used with external runners
#  artifacts:
#    paths:
#      - target/

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  image: maven:3.8.5-openjdk-11-slim
  tags:
    - elksiba
  script:
    - echo "Running unit tests..."
    - export APT_CACHE_DIR=apt-cache && mkdir -pv $APT_CACHE_DIR
    - DEBIAN_FRONTEND=noninteractive apt-get -qq update && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y unzip nodejs npm > /dev/null
    - apt update
    - apt -o dir::cache::archives="apt-cache" install -y unzip nodejs npm
    - nodejs --version
#    - npm config rm proxy; npm config rm https-proxy; npm config --global rm proxy; npm config --global rm https-proxy
#    - npm config set proxy http://$CI_USER:$CI_PWD@and-fgt-ha.akka.eu:9090
#    - npm config set https-proxy http://$CI_USER:$CI_PWD@and-fgt-ha.akka.eu:9090

## required for selfsigned certificate
#    - npm set strict-ssl false
    - npm install -g osmtogeojson
    - mvn verify
    - echo "Unit tests execution complete."

package-job:   # This job runs in the test stage.
  stage: package    # It only starts when the job in the build stage completes successfully.
  image: maven:3.8.5-openjdk-11-slim
  tags:
    - elksiba
  script:
    - echo "Packaging application..."
    - mvn clean package -B -Pdev
    - echo "Application packaged !"
  only:
    - master

deploy-job:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  tags:
    - elksiba
  before_script:
#    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u "$CI_REGISTRY_USER" --password-stdin
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - echo "Deploying application..."
#    - docker build -t gitlab.akka.eu:4567/$GROUP_GITLAB/$REPO .
#    - docker push gitlab.akka.eu:4567/$GROUP_GITLAB/$REPO
    - docker build -t wanam/$REPO:latest .
    - docker push wanam/$REPO:latest
    - echo "Application successfully deployed."
  only:
    - master

# not needed on elksiba runner
after_script:
  - docker logout
